<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd 
                    	http://www.springframework.org/schema/mvc 
						http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd 
                    	http://www.springframework.org/schema/aop 
                    	http://www.springframework.org/schema/aop/spring-aop.xsd
                    	http://www.springframework.org/schema/context 
                    	http://www.springframework.org/schema/context/spring-context-3.0.xsd
  						http://www.springframework.org/schema/cache
  						http://www.springframework.org/schema/cache/spring-cache.xsd ">

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:conf/properties/jdbc.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.pool.driverClassName}"/>
		<property name="url" value="${jdbc.pool.url}"/>
		<property name="username" value="${jdbc.pool.username}"/>
		<property name="password" value="${jdbc.pool.password}"/>
 		<property name="maxActive" value="${jdbc.pool.maxActive}" />
 		<property name="maxIdle" value="${jdbc.pool.maxIdle}" />
 		<property name="defaultAutoCommit" value="${jdbc.pool.defaultAutoCommit}" />
 		<property name= "testWhileIdle" value="${jdbc.pool.testWhileIdle}"/>
 		<property name= "testOnBorrow" value="${jdbc.pool.testOnBorrow}"/>
 		<property name= "testOnReturn" value="${jdbc.pool.testOnReturn}"/>
 		<property name= "validationQuery" value="${jdbc.pool.validationQuery}" />
 		<property name="removeAbandoned" value="${jdbc.pool.removeAbandoned}"/>
 		<property name="minEvictableIdleTimeMillis" value="${jdbc.pool.minEvictableIdleTimeMillis}" />
 		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.pool.timeBetweenEvictionRunsMillis}" />
 		<property name= "numTestsPerEvictionRun" value="${jdbc.pool.numTestsPerEvictionRun}"/>
	</bean>
	
	 
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource"/>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.xiaobaozi.suppliers.fobook.domain</value>
			</list>
		</property>
		<property name="mappingDirectoryLocations">
	     <list>
	     	<value>classpath*:/conf/hibernate</value>
	     </list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.SybaseDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.jdbc.batch_size">1000</prop>
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
			</props>
		</property>
	</bean>
	
	<!-- spring jdbc支持 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 写事务处理 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 事务的增强特性 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<!-- 事务的作用范围 -->
	<aop:config>
		<aop:pointcut expression="execution (* com.xiaobaozi.suppliers.fobook.service.*.*(..)) or execution (* com.xiaobaozi.suppliers.fobook.dao.*.*(..))"
			id="allServiceMethod" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="allServiceMethod" />
	</aop:config>
</beans>