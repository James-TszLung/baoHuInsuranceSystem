<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 这里namespace必须是实体类路径全名 -->
<mapper namespace="com.xiaobaozi.dataSystem.product.relation.CooperationSupplier">
	<!-- 这里的id必须和接口中的方法名相同，不然运行的时候也要报错 -->
	<!-- 返回实体对象 -->
	<resultMap type="com.xiaobaozi.dataSystem.product.relation.CooperationSupplier" id="supplierMap">
		<result property="id" column="id" />
		<result property="productId" column="product_id" />
		<result property="recommendStatus" column="recommend_status" />
		<result property="dictionaryContentId" column="dictionary_contentid" />
		<result property="insureLink" column="insure_link" />
		<result property="clauseLink" column="clause_link" />
		<association property="dictionaryContent" column="dictionary_contentid"
			select="com.xiaobaozi.dataSystem.dictionary.pojo.DictionaryContent.selectById" />

	</resultMap>


	<insert id="insert" parameterType="com.xiaobaozi.dataSystem.product.relation.CooperationSupplier">
		insert into
		cooperation_supplier(id,product_id,recommend_status,dictionary_contentid,insure_link,clause_link,create_time,sort)
		values(#{id},#{productId},#{recommendStatus},#{dictionaryContentId},#{insureLink},#{clauseLink},sysdate(),${sort})
	</insert>


  <select id="selectByProductId" parameterType="string" resultMap="supplierMap">
    select * from cooperation_supplier where product_id=#{productId} order by sort,create_time asc
  </select>


<!--获取推荐合作商	-->
 <select id="selectRecommendProduct" parameterType="string" resultMap="supplierMap">
    select * from cooperation_supplier where product_id=#{productId} and recommend_status=2 order by sort,create_time asc limit 1;
  </select>

	<delete id="deleByProductId" parameterType="string">
		delete from cooperation_supplier where product_id=#{productId}
	</delete>



</mapper>